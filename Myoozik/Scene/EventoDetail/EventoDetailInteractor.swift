//
//  EventoDetailInteractor.swift
//  Myoozik
//
//  Created by Alessandro Bolattino on 24/04/18.
//  Copyright (c) 2018 Mussini SAS. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EventoDetailBusinessLogic
{
    func getDetail(request: EventoDetail.FetchEventoDetail.Request)
}

protocol EventoDetailDataStore
{
  //var name: String { get set }
    var token: String! { get set }
}

class EventoDetailInteractor: EventoDetailBusinessLogic, EventoDetailDataStore
{
    var presenter: EventoDetailPresentationLogic?
    var worker: EventoDetailWorker?
    //var name: String = ""

    // MARK: Do something
    var token: String!
    
    func getDetail(request: EventoDetail.FetchEventoDetail.Request) {
        worker = EventoDetailWorker()
        
        let response = EventoDetail.FetchEventoDetail.Response()

        worker?.fetchEventDetail(token: token) { (response) -> Void in
            
            if let response = response {
                self.presenter?.presentDetail(response: response)
            }
        }
    }
}
